MANUAL PURCHASE AGENT API DOCUMENTATION
=====================================
Version: v15.6
Base URL: http://localhost:7777
Architecture: Flask REST API with Playwright automation service

OVERVIEW
========
The Manual Purchase Agent is a Flask microservice that combines AI, web scraping, and browser automation to:
1. Find technical and parts manuals for specific makes and models
2. Extract error codes and OEM part numbers from manuals using GPT-4.1-Nano
3. Resolve generic part names to OEM part numbers with configurable search methods
4. Validate part numbers using AI-powered assessment of search results
5. Find supplier listings for parts (both OEM and generic)
6. Autonomously navigate e-commerce sites to purchase parts using stored billing profiles
7. Process equipment CSV files with multi-threaded processing for enhanced performance

SYSTEM ENDPOINTS
===============

GET /api/system/health
----------------------
Check system health and service status.

Response:
{
  "status": "healthy",
  "services": {
    "flask": "running",
    "database": "connected",
    "recorder": "available"
  },
  "version": "v15.6"
}

MANUAL ENDPOINTS
===============

POST /api/manuals/find
----------------------
Find manuals for specific equipment make and model.

Request:
{
  "make": "Hobart",
  "model": "HL600",
  "query": "service manual"
}

Response:
{
  "success": true,
  "manuals": [
    {
      "title": "Hobart HL600 Service Manual",
      "url": "https://example.com/manual.pdf",
      "file_type": "PDF",
      "file_size": "2.5MB",
      "source": "serpapi",
      "confidence": 0.95
    }
  ],
  "search_query": "Hobart HL600 service manual",
  "total_results": 1
}

POST /api/manuals/download
--------------------------
Download a manual from URL and store locally.

Request:
{
  "url": "https://example.com/manual.pdf",
  "make": "Hobart",
  "model": "HL600"
}

Response:
{
  "success": true,
  "manual_id": "abc123",
  "file_path": "uploads/manuals/hobart_hl600_manual.pdf",
  "file_size": 2621440,
  "pages": 45
}

POST /api/manuals/extract
-------------------------
Extract error codes and part numbers from a manual.

Request:
{
  "manual_id": "abc123",
  "extraction_type": "both"  // "error_codes", "part_numbers", or "both"
}

Response:
{
  "success": true,
  "error_codes": [
    {
      "code": "E01",
      "description": "Bowl Lift Motor Failure",
      "page": 12,
      "context": "Error E01 indicates bowl lift motor failure..."
    }
  ],
  "part_numbers": [
    {
      "part_number": "00-917676",
      "description": "Bowl Lift Motor Assembly",
      "page": 25,
      "context": "Replace motor assembly part 00-917676..."
    }
  ],
  "total_error_codes": 1,
  "total_part_numbers": 1
}

GET /api/manuals/list
--------------------
List all stored manuals.

Response:
{
  "manuals": [
    {
      "id": "abc123",
      "make": "Hobart",
      "model": "HL600",
      "title": "Service Manual",
      "file_path": "uploads/manuals/hobart_hl600_manual.pdf",
      "file_size": 2621440,
      "pages": 45,
      "created_at": "2025-06-13T12:00:00Z"
    }
  ],
  "total": 1
}

PART ENDPOINTS
=============

POST /api/parts/resolve
-----------------------
Resolve generic part descriptions to OEM part numbers with confidence scoring.

Request:
{
  "description": "Bowl Lift Motor",
  "make": "Hobart",
  "model": "HL600",
  "use_database": true,
  "use_manual_search": true,
  "use_web_search": true,
  "save_results": false
}

Response:
{
  "success": true,
  "recommended_result": {
    "oem_part_number": "00-917676",
    "description": "Bowl Lift Motor Assembly",
    "confidence": 0.95,
    "source": "manual_search",
    "serpapi_validation": {
      "is_valid": true,
      "confidence_score": 0.9,
      "assessment": "This part number appears legitimate based on search results showing it as an official Hobart replacement part for HL600 mixers."
    },
    "selection_metadata": {
      "selected_from": "manual_search_result",
      "composite_score": 1.04,
      "method_confidence": 0.95,
      "validation_confidence": 0.9
    }
  },
  "results": {
    "database_search": null,
    "manual_search": {
      "oem_part_number": "00-917676",
      "description": "Bowl Lift Motor Assembly",
      "confidence": 0.95,
      "source": "Hobart HL600 Service Manual",
      "page": 25
    },
    "ai_web_search": {
      "oem_part_number": "00-917676-001",
      "description": "Bowl Lift Motor",
      "confidence": 0.85,
      "source": "web_search"
    }
  },
  "search_methods_used": ["manual_search", "ai_web_search"],
  "total_results": 2
}

POST /api/parts/validate
------------------------
Validate if a part number is appropriate for specific equipment.

Request:
{
  "part_number": "00-917676",
  "make": "Hobart",
  "model": "HL600",
  "description": "Bowl Lift Motor"
}

Response:
{
  "success": true,
  "is_valid": true,
  "confidence_score": 0.9,
  "assessment": "This part number appears legitimate based on search results showing it as an official Hobart replacement part for HL600 mixers.",
  "search_results_summary": "Found multiple supplier listings confirming this part number for Hobart HL600 mixers."
}

GET /api/parts/generic
----------------------
Get list of generic parts that can be resolved to OEM numbers.

Response:
{
  "generic_parts": [
    {
      "id": 1,
      "description": "Bowl Lift Motor",
      "category": "Motor",
      "common_makes": ["Hobart", "KitchenAid"]
    }
  ],
  "total": 1
}

SUPPLIER ENDPOINTS
=================

POST /api/suppliers/find
------------------------
Find suppliers for specific parts with AI-powered ranking.

Request:
{
  "part_number": "00-917676",
  "make": "Hobart",
  "model": "HL600",
  "description": "Bowl Lift Motor",
  "max_results": 5
}

Response:
{
  "success": true,
  "suppliers": [
    {
      "supplier_name": "PartsTown",
      "url": "https://www.partstown.com/product/917676",
      "price": "$245.99",
      "availability": "In Stock",
      "shipping": "Free shipping",
      "rating": 4.8,
      "rank": 1,
      "is_product_page": true,
      "confidence": 0.95
    },
    {
      "supplier_name": "WebstaurantStore",
      "url": "https://www.webstaurantstore.com/hobart-00-917676-bowl-lift-motor/917676.html",
      "price": "$239.99",
      "availability": "In Stock",
      "shipping": "$12.99",
      "rating": 4.6,
      "rank": 2,
      "is_product_page": true,
      "confidence": 0.88
    }
  ],
  "total_suppliers": 2,
  "search_query": "Hobart 00-917676 bowl lift motor"
}

GET /api/suppliers/list
----------------------
List all known suppliers in the system.

Response:
{
  "suppliers": [
    {
      "id": 1,
      "name": "PartsTown",
      "website": "partstown.com",
      "specialties": ["Commercial Kitchen Equipment"],
      "rating": 4.8,
      "verified": true
    }
  ],
  "total": 1
}

PROFILE ENDPOINTS
================

POST /api/profiles/create
-------------------------
Create a new billing profile for automated purchases.

Request:
{
  "name": "Default Profile",
  "personal_info": {
    "first_name": "John",
    "last_name": "Doe",
    "email": "john.doe@company.com",
    "phone": "555-123-4567"
  },
  "address": {
    "street": "123 Main St",
    "city": "Anytown",
    "state": "CA",
    "zip": "12345",
    "country": "US"
  },
  "payment": {
    "card_number": "4111111111111111",
    "expiry_month": "12",
    "expiry_year": "25",
    "cvv": "123",
    "cardholder_name": "John Doe"
  },
  "billing_address": {
    "same_as_shipping": true
  }
}

Response:
{
  "success": true,
  "profile_id": "prof_123",
  "message": "Profile created successfully"
}

GET /api/profiles/list
---------------------
List all billing profiles (encrypted data).

Response:
{
  "profiles": [
    {
      "id": "prof_123",
      "name": "Default Profile",
      "created_at": "2025-06-13T12:00:00Z",
      "updated_at": "2025-06-13T12:00:00Z"
    }
  ],
  "total": 1
}

DELETE /api/profiles/{profile_id}
--------------------------------
Delete a billing profile.

Response:
{
  "success": true,
  "message": "Profile deleted successfully"
}

PURCHASE ENDPOINTS
=================

POST /api/purchases/execute
---------------------------
Execute an automated purchase using stored billing profile.

Request:
{
  "supplier_url": "https://www.partstown.com/product/917676",
  "profile_id": "prof_123",
  "quantity": 1,
  "part_number": "00-917676",
  "description": "Bowl Lift Motor"
}

Response:
{
  "success": true,
  "purchase_id": "purch_456",
  "status": "completed",
  "order_confirmation": "ORD-12345",
  "total_amount": "$245.99",
  "recording_used": "partstown.json",
  "execution_time": 45.2,
  "screenshots": [
    "uploads/screenshots/purchase_456_step1.png"
  ]
}

GET /api/purchases/history
-------------------------
Get purchase history.

Response:
{
  "purchases": [
    {
      "id": "purch_456",
      "part_number": "00-917676",
      "supplier": "PartsTown",
      "status": "completed",
      "total_amount": "$245.99",
      "created_at": "2025-06-13T12:00:00Z"
    }
  ],
  "total": 1
}

RECORDING ENDPOINTS
==================

POST /api/recordings/record
---------------------------
Start recording a new e-commerce site interaction.

Request:
{
  "url": "https://www.partstown.com",
  "recording_name": "partstown",
  "enhanced": true
}

Response:
{
  "success": true,
  "message": "Recording started",
  "recording_id": "rec_789",
  "url": "https://www.partstown.com"
}

GET /api/recordings/list
-----------------------
List all available recordings.

Response:
{
  "recordings": [
    {
      "name": "partstown",
      "file": "partstown.json",
      "url": "https://www.partstown.com",
      "created_at": "2025-06-13T12:00:00Z",
      "size": 15234
    }
  ],
  "total": 1
}

POST /api/recordings/play
------------------------
Play back a recording with variable substitution.

Request:
{
  "recording_name": "partstown",
  "variables": {
    "product_url": "https://www.partstown.com/product/917676",
    "first_name": "John",
    "last_name": "Doe",
    "email": "john.doe@company.com"
  },
  "options": {
    "headless": false,
    "fast": true,
    "conservative": false
  }
}

Response:
{
  "success": true,
  "execution_time": 42.1,
  "steps_completed": 15,
  "screenshots": [
    "recordings/screenshots/playback_step1.png"
  ],
  "final_url": "https://www.partstown.com/checkout/success"
}

POST /api/recordings/clone
--------------------------
Clone a recording to work with a different URL.

Request:
{
  "recording_name": "partstown",
  "new_url": "https://www.webstaurantstore.com/product/12345",
  "variables": {
    "first_name": "John",
    "last_name": "Doe"
  }
}

Response:
{
  "success": true,
  "execution_time": 38.7,
  "steps_completed": 12,
  "adapted_for_url": "https://www.webstaurantstore.com/product/12345"
}

DELETE /api/recordings/{recording_name}
--------------------------------------
Delete a recording.

Response:
{
  "success": true,
  "message": "Recording deleted successfully"
}

ENRICHMENT ENDPOINTS
===================

POST /api/enrichment/enrich
---------------------------
Enrich part data with additional information from multiple sources.

Request:
{
  "part_number": "00-917676",
  "make": "Hobart",
  "model": "HL600",
  "description": "Bowl Lift Motor"
}

Response:
{
  "success": true,
  "enriched_data": {
    "specifications": {
      "voltage": "115V",
      "amperage": "2.5A",
      "rpm": "1725",
      "horsepower": "0.33HP"
    },
    "dimensions": {
      "length": "6.5in",
      "width": "4.2in",
      "height": "5.1in",
      "weight": "8.5lbs"
    },
    "compatibility": [
      "Hobart HL600",
      "Hobart HL662",
      "Hobart HL1400"
    ],
    "installation_notes": "Requires motor mount bracket removal",
    "warranty": "1 Year Manufacturer Warranty"
  },
  "sources": [
    "manufacturer_spec_sheet",
    "supplier_listings",
    "service_manual"
  ]
}

SCREENSHOT ENDPOINTS
===================

POST /api/screenshots/capture
-----------------------------
Capture a screenshot of a website.

Request:
{
  "url": "https://www.partstown.com/product/917676",
  "full_page": true,
  "mobile": false
}

Response:
{
  "success": true,
  "screenshot_path": "uploads/screenshots/partstown_product_123456.png",
  "file_size": 234567,
  "dimensions": {
    "width": 1920,
    "height": 1080
  }
}

CSV PROCESSING ENDPOINTS
========================

POST /api/csv/process
--------------------
Process equipment CSV file with multi-threaded part resolution.

Request (multipart/form-data):
- file: equipment_list.csv
- workers: 4
- delay: 0.5
- start_row: 1
- max_rows: 100

Response:
{
  "success": true,
  "job_id": "csv_job_789",
  "status": "processing",
  "total_rows": 100,
  "estimated_completion": "2025-06-13T12:15:00Z"
}

GET /api/csv/status/{job_id}
---------------------------
Check CSV processing job status.

Response:
{
  "job_id": "csv_job_789",
  "status": "completed",
  "progress": {
    "total_rows": 100,
    "processed_rows": 100,
    "success_count": 95,
    "error_count": 5
  },
  "output_file": "uploads/processed_equipment_list_20250613.csv",
  "processing_time": 180.5,
  "errors": [
    {
      "row": 23,
      "error": "Part not found",
      "details": "No matching parts found for description"
    }
  ]
}

ERROR HANDLING
==============

All endpoints return consistent error responses:

400 Bad Request:
{
  "success": false,
  "error": "Invalid request parameters",
  "details": "Missing required field: make"
}

404 Not Found:
{
  "success": false,
  "error": "Resource not found",
  "details": "Manual with ID abc123 not found"
}

500 Internal Server Error:
{
  "success": false,
  "error": "Internal server error",
  "details": "Database connection failed"
}

AUTHENTICATION
==============
Currently, the API does not require authentication. All endpoints are publicly accessible on localhost:7777.

RATE LIMITING
============
- API calls are subject to SerpAPI and OpenAI rate limits
- CSV processing includes configurable delays between requests
- Recommended delay: 0.5-1.0 seconds between API calls

DATA FORMATS
===========

Error Codes Format:
"Error Code Number", "Short Error Description"
Example: "E01", "Bowl Lift Motor Failure"

Part Numbers Format:
"OEM Part Number", "Short Part Description"
Example: "00-917676", "Bowl Lift Motor Assembly"

CSV Input Format:
Make, Model, Part Name, Equipment Photo
Hobart, HL600, Bowl Lift Motor, photo_url

CSV Output Format:
Make,Model,Part Name,Equipment Photo,Manual 1,Manual 2,Manual 3,Manual 4,Manual 5,
OEM Part Verified,OEM Part Number,Confidence Score,Selected Method,Part Photo,
Alternate Part Numbers,Alternate Part Descriptions,
Supplier 1,Supplier 2,Supplier 3,Supplier 4,Supplier 5

CONFIGURATION
============

Environment Variables:
- SERPAPI_KEY: Required for web searches
- OPENAI_API_KEY: Required for AI processing
- SECRET_KEY: Flask secret key
- ENCRYPTION_KEY: For billing profile encryption
- DATABASE_URI: Database connection string
- ENABLE_REAL_PURCHASES: Set to "true" for real purchases
- PLAYWRIGHT_RECORDER_API_URL: Recording service URL (default: http://localhost:3001)

Service Ports:
- Flask API: 7777
- Playwright Recorder: 3001 (optional)

TROUBLESHOOTING
==============

Common Issues:
1. "Port already in use": Kill existing processes with lsof -ti:7777,3001 | xargs kill -9
2. "Database connection failed": Check DATABASE_URI and database service
3. "Recording not found": Ensure recording exists in recordings/ directory
4. "Playwright browser error": Run playwright install chromium
5. "API rate limit exceeded": Increase delays in CSV processing
6. "SSL certificate error": Update certificates or disable SSL verification for development

Health Check:
GET /api/system/health to verify all services are running properly.

EXAMPLES
========

Complete Part Resolution Workflow:
1. POST /api/manuals/find - Find service manuals
2. POST /api/manuals/download - Download manual
3. POST /api/manuals/extract - Extract part numbers
4. POST /api/parts/resolve - Resolve to OEM numbers
5. POST /api/suppliers/find - Find suppliers
6. POST /api/purchases/execute - Execute purchase

Recording and Playback Workflow:
1. POST /api/recordings/record - Record site interaction
2. POST /api/recordings/play - Play back with real data
3. POST /api/purchases/execute - Use for automated purchasing

CSV Processing Workflow:
1. POST /api/csv/process - Submit CSV file
2. GET /api/csv/status/{job_id} - Monitor progress
3. Download processed CSV with OEM part numbers and suppliers

This API documentation covers all available endpoints in the Manual Purchase Agent v15.6.
For additional support, refer to the CLAUDE.md file in the project root directory.